// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xmqlookupd.proto

package pbapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UnregisterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicName            string   `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	ChannelName          string   `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterRequest) Reset()         { *m = UnregisterRequest{} }
func (m *UnregisterRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterRequest) ProtoMessage()    {}
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cca727fa62c072e5, []int{0}
}

func (m *UnregisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterRequest.Unmarshal(m, b)
}
func (m *UnregisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterRequest.Merge(m, src)
}
func (m *UnregisterRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterRequest.Size(m)
}
func (m *UnregisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterRequest proto.InternalMessageInfo

func (m *UnregisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UnregisterRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *UnregisterRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type UnregisterReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterReply) Reset()         { *m = UnregisterReply{} }
func (m *UnregisterReply) String() string { return proto.CompactTextString(m) }
func (*UnregisterReply) ProtoMessage()    {}
func (*UnregisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cca727fa62c072e5, []int{1}
}

func (m *UnregisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterReply.Unmarshal(m, b)
}
func (m *UnregisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterReply.Marshal(b, m, deterministic)
}
func (m *UnregisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterReply.Merge(m, src)
}
func (m *UnregisterReply) XXX_Size() int {
	return xxx_messageInfo_UnregisterReply.Size(m)
}
func (m *UnregisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterReply proto.InternalMessageInfo

func (m *UnregisterReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *UnregisterReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RegisterRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TopicName            string   `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
	ChannelName          string   `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cca727fa62c072e5, []int{2}
}

func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(m, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegisterRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *RegisterRequest) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

type RegisterReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterReply) Reset()         { *m = RegisterReply{} }
func (m *RegisterReply) String() string { return proto.CompactTextString(m) }
func (*RegisterReply) ProtoMessage()    {}
func (*RegisterReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_cca727fa62c072e5, []int{3}
}

func (m *RegisterReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterReply.Unmarshal(m, b)
}
func (m *RegisterReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterReply.Marshal(b, m, deterministic)
}
func (m *RegisterReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterReply.Merge(m, src)
}
func (m *RegisterReply) XXX_Size() int {
	return xxx_messageInfo_RegisterReply.Size(m)
}
func (m *RegisterReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterReply proto.InternalMessageInfo

func (m *RegisterReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *RegisterReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*UnregisterRequest)(nil), "pbapi.UnregisterRequest")
	proto.RegisterType((*UnregisterReply)(nil), "pbapi.UnregisterReply")
	proto.RegisterType((*RegisterRequest)(nil), "pbapi.RegisterRequest")
	proto.RegisterType((*RegisterReply)(nil), "pbapi.RegisterReply")
}

func init() {
	proto.RegisterFile("xmqlookupd.proto", fileDescriptor_cca727fa62c072e5)
}

var fileDescriptor_cca727fa62c072e5 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x69, 0x0a, 0x88, 0x1e, 0x85, 0x86, 0x13, 0xaa, 0xa2, 0x48, 0x48, 0x90, 0x89, 0x29,
	0x03, 0x15, 0x0b, 0x13, 0x2b, 0x0b, 0x42, 0x91, 0x98, 0x51, 0x9a, 0x1c, 0xc1, 0x22, 0xfe, 0x53,
	0xc7, 0x95, 0xc8, 0x17, 0x67, 0x46, 0x76, 0x9c, 0x94, 0x52, 0x16, 0x06, 0xb6, 0xcb, 0xef, 0xde,
	0xe5, 0x9d, 0x9f, 0x0d, 0xe1, 0x07, 0x5f, 0xd5, 0x52, 0xbe, 0xaf, 0x55, 0x99, 0x2a, 0x2d, 0x8d,
	0xc4, 0x03, 0xb5, 0xcc, 0x15, 0x8b, 0xa7, 0x85, 0xe4, 0x5c, 0x8a, 0x0e, 0x26, 0x04, 0x67, 0xcf,
	0x42, 0x53, 0xc5, 0x1a, 0x43, 0x3a, 0xa3, 0xd5, 0x9a, 0x1a, 0x83, 0xa7, 0x10, 0xb0, 0x32, 0x1a,
	0x5d, 0x8e, 0xae, 0x27, 0x59, 0xc0, 0x4a, 0xbc, 0x00, 0x30, 0x52, 0xb1, 0xe2, 0x45, 0xe4, 0x9c,
	0xa2, 0xc0, 0xf1, 0x89, 0x23, 0x8f, 0x39, 0x27, 0xbc, 0x82, 0x69, 0xf1, 0x96, 0x0b, 0x41, 0x75,
	0x27, 0x18, 0x3b, 0xc1, 0xb1, 0x67, 0x56, 0x92, 0xdc, 0xc2, 0xec, 0xbb, 0x8d, 0xaa, 0x5b, 0x0c,
	0x61, 0x4c, 0x5a, 0x7b, 0x17, 0x5b, 0x5a, 0xc2, 0x9b, 0xca, 0xff, 0xdf, 0x96, 0x49, 0x01, 0xb3,
	0xec, 0xdf, 0x77, 0x5b, 0xc0, 0x49, 0xf6, 0xd7, 0xcd, 0x6e, 0x3e, 0x47, 0x00, 0x9b, 0x84, 0x31,
	0x85, 0xfd, 0x27, 0x26, 0x2a, 0xc4, 0xd4, 0x85, 0x9c, 0xda, 0x0f, 0xbf, 0x71, 0x1c, 0x6e, 0x31,
	0x55, 0xb7, 0xc9, 0x1e, 0xde, 0xc1, 0xd1, 0x43, 0x49, 0xc2, 0xb0, 0xd7, 0x16, 0xe7, 0xbe, 0xdf,
	0x83, 0x7e, 0xee, 0x7c, 0x87, 0x77, 0xb3, 0xf7, 0x00, 0x9b, 0x2c, 0x31, 0xf2, 0xaa, 0x9d, 0x5b,
	0x8c, 0xe7, 0xbf, 0x74, 0x06, 0xf7, 0xfe, 0xc4, 0x83, 0xfb, 0x8f, 0x9c, 0x07, 0xf7, 0x6c, 0x7b,
	0x76, 0x79, 0xe8, 0xde, 0xcd, 0xe2, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x24, 0x7d, 0xd2, 0x60,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// XmqlookupdClient is the client API for Xmqlookupd service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XmqlookupdClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (*IdentifyReply, error)
	Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*UnregisterReply, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error)
}

type xmqlookupdClient struct {
	cc grpc.ClientConnInterface
}

func NewXmqlookupdClient(cc grpc.ClientConnInterface) XmqlookupdClient {
	return &xmqlookupdClient{cc}
}

func (c *xmqlookupdClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/pbapi.xmqlookupd/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xmqlookupdClient) Identify(ctx context.Context, in *IdentifyRequest, opts ...grpc.CallOption) (*IdentifyReply, error) {
	out := new(IdentifyReply)
	err := c.cc.Invoke(ctx, "/pbapi.xmqlookupd/Identify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xmqlookupdClient) Unregister(ctx context.Context, in *UnregisterRequest, opts ...grpc.CallOption) (*UnregisterReply, error) {
	out := new(UnregisterReply)
	err := c.cc.Invoke(ctx, "/pbapi.xmqlookupd/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xmqlookupdClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterReply, error) {
	out := new(RegisterReply)
	err := c.cc.Invoke(ctx, "/pbapi.xmqlookupd/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XmqlookupdServer is the server API for Xmqlookupd service.
type XmqlookupdServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	Identify(context.Context, *IdentifyRequest) (*IdentifyReply, error)
	Unregister(context.Context, *UnregisterRequest) (*UnregisterReply, error)
	Register(context.Context, *RegisterRequest) (*RegisterReply, error)
}

// UnimplementedXmqlookupdServer can be embedded to have forward compatible implementations.
type UnimplementedXmqlookupdServer struct {
}

func (*UnimplementedXmqlookupdServer) Ping(ctx context.Context, req *PingRequest) (*PingReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedXmqlookupdServer) Identify(ctx context.Context, req *IdentifyRequest) (*IdentifyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Identify not implemented")
}
func (*UnimplementedXmqlookupdServer) Unregister(ctx context.Context, req *UnregisterRequest) (*UnregisterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}
func (*UnimplementedXmqlookupdServer) Register(ctx context.Context, req *RegisterRequest) (*RegisterReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func init() {
	grpc.RegisterServiceDesc(&_Xmqlookupd_serviceDesc)
}
func RegisterXmqlookupdServer(s *grpc.Server, srv XmqlookupdServer) {
	s.RegisterService(&_Xmqlookupd_serviceDesc, srv)
}

func _Xmqlookupd_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XmqlookupdServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbapi.xmqlookupd/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XmqlookupdServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xmqlookupd_Identify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XmqlookupdServer).Identify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbapi.xmqlookupd/Identify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XmqlookupdServer).Identify(ctx, req.(*IdentifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xmqlookupd_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XmqlookupdServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbapi.xmqlookupd/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XmqlookupdServer).Unregister(ctx, req.(*UnregisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Xmqlookupd_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XmqlookupdServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbapi.xmqlookupd/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XmqlookupdServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Xmqlookupd_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbapi.xmqlookupd",
	HandlerType: (*XmqlookupdServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Xmqlookupd_Ping_Handler,
		},
		{
			MethodName: "Identify",
			Handler:    _Xmqlookupd_Identify_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _Xmqlookupd_Unregister_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _Xmqlookupd_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "xmqlookupd.proto",
}
